
# Tiz Lead Scraper Environment Configuration
# Copy this file to .env and fill in your values

# ===== REQUIRED CONFIGURATION =====

# Apify API Token (Required for scraping Apollo.io)
# Get your token from: https://console.apify.com/account/integrations
APIFY_API_TOKEN=your_apify_token_here

# ===== NOTION INTEGRATION =====

# Notion Integration Token (Required for Notion export)
# Get your token from: https://www.notion.so/my-integrations
# SECURITY: Never commit real tokens to version control
# IMPORTANT: Users must enter their own tokens through the web interface
NOTION_TOKEN=

# Notion Database ID (Required for Notion export)
# Extract from your Notion database URL
# IMPORTANT: Users must enter their own database ID through the web interface
NOTION_DATABASE_ID=

# ===== AI/ML CONFIGURATION =====

# OpenAI API Key (Required for AI agent functionality)
# Get your key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# OpenRouter API Key (Alternative to OpenAI, supports multiple models)
# Get your key from: https://openrouter.ai/keys
OPENROUTER_API_KEY=your_openrouter_api_key_here

# ===== OPTIONAL API INTEGRATIONS =====

# Google Sheets Integration (Optional)
# Path to your service account JSON file
# Instructions: https://developers.google.com/sheets/api/quickstart/python
GOOGLE_SHEETS_CREDENTIALS=

# ===== APPLICATION SETTINGS =====

# Secret key for session management and CSRF protection
# Generate a secure key: python -c "import secrets; print(secrets.token_urlsafe(32))"
# SECURITY: Use a unique, random key for production
SECRET_KEY=your-unique-secret-key-here

# Logging configuration
# Options: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# Enable debug mode (set to true for development)
DEBUG=false

# ===== RATE LIMITING =====

# Number of requests allowed per time window
RATE_LIMIT_REQUESTS=10

# Time window for rate limiting (in seconds)
RATE_LIMIT_WINDOW=60

# ===== DOCKER SPECIFIC =====

# Container timezone (optional)
TZ=UTC

# Resource limits (for Docker Compose)
MEMORY_LIMIT=1g
CPU_LIMIT=1.0

# ===== DEVELOPMENT SETTINGS =====

# Development mode settings (only for dev profile)
DEV_PORT=5000
DEV_DEBUG_PORT=8000

# Enable auto-reload in development
DEV_RELOAD=true

# ===== SECURITY SETTINGS =====

# CORS allowed origins (comma-separated)
# SECURITY: Use specific domains for production, not *
CORS_ORIGINS=http://localhost:5000,http://0.0.0.0:5000
ALLOWED_ORIGINS=http://localhost:5000,http://0.0.0.0:5000

# Enable HTTPS redirect (set to true in production with HTTPS)
FORCE_HTTPS=false

# ===== STORAGE CONFIGURATION =====

# Data persistence directory
DATA_DIR=./data

# Logs directory
LOGS_DIR=./logs

# Temporary files directory
TEMP_DIR=./tmp

# ===== MONITORING & HEALTH CHECKS =====

# Health check endpoint configuration
HEALTH_CHECK_TIMEOUT=10
HEALTH_CHECK_INTERVAL=30

# ===== SECURITY BEST PRACTICES =====

# 1. Never commit .env files to version control
# 2. Use unique, strong secrets for each environment
# 3. Rotate API keys regularly
# 4. Use environment-specific configurations
# 5. Monitor for exposed credentials in logs
# 6. Use HTTPS in production
# 7. Validate all input data
# 8. Keep dependencies updated

# ===== PRODUCTION DEPLOYMENT CHECKLIST =====

# Before deploying to production:
# ✓ Set DEBUG=false
# ✓ Use a strong, unique SECRET_KEY
# ✓ Configure proper CORS_ORIGINS (not *)
# ✓ Set FORCE_HTTPS=true if using HTTPS
# ✓ Configure all required API tokens
# ✓ Review and test all integrations
# ✓ Set appropriate rate limiting
# ✓ Configure proper logging levels
# ✓ Test backup and recovery procedures
