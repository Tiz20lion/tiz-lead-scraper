warning: in the working copy of '.dockerignore', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of '.github/workflows/docker-publish.yml', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'DOCKER_HUB_README.md', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Dockerfile', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'README.md', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/api/routes.py', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/clients/apify_client.py', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/clients/notion_client.py', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/clients/sheets_client.py', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/core/config.py', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/core/security.py', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/main.py', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/models/schemas.py', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/static/css/card-components.css', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/static/css/dropdown-components.css', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/static/css/modal-components.css', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/static/css/toast-components.css', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/static/index.html', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/static/js/animated-background.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/static/js/app.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/static/js/ui-components.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'docker-compose.yml', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'requirements.txt', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'start.bat', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'start.sh', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/.dockerignore b/.dockerignore[m
[1mindex 4699860..66dc897 100644[m
[1m--- a/.dockerignore[m
[1m+++ b/.dockerignore[m
[36m@@ -31,6 +31,10 @@[m [mENV/[m
 *.swp[m
 *.swo[m
 [m
[32m+[m[32m# Cursor IDE[m
[32m+[m[32m.cursor/[m
[32m+[m[32m*.mdc[m
[32m+[m
 # OS[m
 .DS_Store[m
 Thumbs.db[m
[36m@@ -60,6 +64,10 @@[m [mtemp/[m
 .env.local[m
 .env.production[m
 [m
[32m+[m[32m# Sensitive scripts with API keys[m
[32m+[m[32mstart_with_env.bat[m
[32m+[m[32mstart_with_env.sh[m
[32m+[m
 # Replit specific[m
 .replit[m
 uv.lock[m
\ No newline at end of file[m
[1mdiff --git a/.github/workflows/docker-publish.yml b/.github/workflows/docker-publish.yml[m
[1mindex f215330..5137fc4 100644[m
[1m--- a/.github/workflows/docker-publish.yml[m
[1m+++ b/.github/workflows/docker-publish.yml[m
[36m@@ -1,15 +1,19 @@[m
[31m-name: Build and Push Docker Image[m
[32m+[m[32mname: Build and Publish Docker Image[m
 [m
 on:[m
   push:[m
[31m-    branches: [ main, master ][m
[31m-    tags: [ 'v*' ][m
[32m+[m[32m    branches:[m
[32m+[m[32m      - main[m
[32m+[m[32m      - develop[m
[32m+[m[32m    tags:[m
[32m+[m[32m      - 'v*'[m
   pull_request:[m
[31m-    branches: [ main, master ][m
[32m+[m[32m    branches:[m
[32m+[m[32m      - main[m
 [m
 env:[m
   REGISTRY: docker.io[m
[31m-  IMAGE_NAME: tiz-lead-scraper[m
[32m+[m[32m  IMAGE_NAME: tiz20lion/tiz-lead-scraper[m
 [m
 jobs:[m
   build-and-push:[m
[36m@@ -29,6 +33,7 @@[m [mjobs:[m
       if: github.event_name != 'pull_request'[m
       uses: docker/login-action@v3[m
       with:[m
[32m+[m[32m        registry: ${{ env.REGISTRY }}[m
         username: ${{ secrets.DOCKER_USERNAME }}[m
         password: ${{ secrets.DOCKER_PASSWORD }}[m
 [m
[36m@@ -42,6 +47,7 @@[m [mjobs:[m
           type=ref,event=pr[m
           type=semver,pattern={{version}}[m
           type=semver,pattern={{major}}.{{minor}}[m
[32m+[m[32m          type=semver,pattern={{major}}[m
           type=raw,value=latest,enable={{is_default_branch}}[m
 [m
     - name: Build and push Docker image[m
[36m@@ -53,4 +59,13 @@[m [mjobs:[m
         tags: ${{ steps.meta.outputs.tags }}[m
         labels: ${{ steps.meta.outputs.labels }}[m
         cache-from: type=gha[m
[31m-        cache-to: type=gha,mode=max[m
\ No newline at end of file[m
[32m+[m[32m        cache-to: type=gha,mode=max[m
[32m+[m
[32m+[m[32m    - name: Update Docker Hub description[m
[32m+[m[32m      if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'[m
[32m+[m[32m      uses: peter-evans/dockerhub-description@v3[m
[32m+[m[32m      with:[m
[32m+[m[32m        username: ${{ secrets.DOCKER_USERNAME }}[m
[32m+[m[32m        password: ${{ secrets.DOCKER_PASSWORD }}[m
[32m+[m[32m        repository: ${{ env.IMAGE_NAME }}[m
[32m+[m[32m        readme-filepath: ./DOCKER_HUB_README.md[m
\ No newline at end of file[m
[1mdiff --git a/.replit b/.replit[m
[1mdeleted file mode 100644[m
[1mindex 83a5169..0000000[m
[1m--- a/.replit[m
[1m+++ /dev/null[m
[36m@@ -1,25 +0,0 @@[m
[31m-modules = ["python-3.11", "web", "nodejs-20"][m
[31m-run = "uvicorn undefined:app --host 0.0.0.0 --port 3000"[m
[31m-[m
[31m-[nix][m
[31m-channel = "stable-24_05"[m
[31m-packages = ["libxcrypt"][m
[31m-[m
[31m-[deployment][m
[31m-run = ["sh", "-c", "uvicorn undefined:app --host 0.0.0.0 --port 3000"][m
[31m-[m
[31m-[workflows][m
[31m-runButton = "Run App"[m
[31m-[m
[31m-[[workflows.workflow]][m
[31m-name = "Run App"[m
[31m-author = 42556496[m
[31m-mode = "sequential"[m
[31m-[m
[31m-[[workflows.workflow.tasks]][m
[31m-task = "shell.exec"[m
[31m-args = "cd app && python -m uvicorn main:app --host 0.0.0.0 --port 5000 --reload"[m
[31m-[m
[31m-[[ports]][m
[31m-localPort = 5000[m
[31m-externalPort = 80[m
[1mdiff --git a/DOCKER_HUB_README.md b/DOCKER_HUB_README.md[m
[1mindex 2e0c470..ae64744 100644[m
[1m--- a/DOCKER_HUB_README.md[m
[1m+++ b/DOCKER_HUB_README.md[m
[36m@@ -1,114 +1,115 @@[m
[31m-# Tiz Lead Scraper[m
[32m+[m[32m# 🤖 Tiz AI Lead Scraper[m
 [m
[31m-🚀 **A powerful, production-ready web scraper for extracting leads from Apollo.io**[m
[32m+[m[32m[![Docker Pulls](https://img.shields.io/docker/pulls/tiz20lion/tiz-lead-scraper)](https://hub.docker.com/r/tiz20lion/tiz-lead-scraper)[m
[32m+[m[32m[![Docker Image Size](https://img.shields.io/docker/image-size/tiz20lion/tiz-lead-scraper/latest)](https://hub.docker.com/r/tiz20lion/tiz-lead-scraper)[m
 [m
[31m-Extract up to 50,000 leads with beautiful animations and seamless integrations![m
[31m-[m
[31m-## 🎯 Features[m
[31m-[m
[31m-- **Apollo.io Integration**: Extract leads with 10+ data fields[m
[31m-- **Multiple Export Options**: CSV, JSON, Google Sheets, Notion[m
[31m-- **Beautiful UI**: Glass-morphism design with smooth animations[m
[31m-- **Production Ready**: Built-in security, rate limiting, health checks[m
[31m-- **Easy Deployment**: One-command Docker setup[m
[32m+[m[32m**AI-Powered Lead Generation Agent - Intelligent automation for high-quality leads**[m
 [m
 ## 🚀 Quick Start[m
 [m
 ```bash[m
[31m-# Pull and run the latest version[m
[31m-docker run -d -p 5000:5000 --name tiz-lead-scraper tiz20lion/tiz-lead-scraper:latest[m
[31m-[m
[31m-# Access the application[m
[31m-open http://localhost:5000[m
[32m+[m[32m# Start AI agent instantly[m
[32m+[m[32mdocker run -d -p 5000:5000 tiz20lion/tiz-lead-scraper:latest[m
[32m+[m
[32m+[m[32m# With your OpenRouter AI key[m
[32m+[m[32mdocker run -d -p 5000:5000 -e OPENROUTER_API_KEY=your_key tiz20lion/tiz-lead-scraper:latest[m
[32m+[m
[32m+[m[32m# Production AI setup with persistent data[m
[32m+[m[32mdocker run -d \[m
[32m+[m[32m  --name tiz-ai-scraper \[m
[32m+[m[32m  --restart unless-stopped \[m
[32m+[m[32m  -p 5000:5000 \[m
[32m+[m[32m  -e OPENROUTER_API_KEY=your_key \[m
[32m+[m[32m  -v tiz-data:/app/data \[m
[32m+[m[32m  tiz20lion/tiz-lead-scraper:latest[m
[32m+[m
[32m+[m[32m# Open http://localhost:5000[m
 ```[m
 [m
[31m-## 📋 What You Need[m
[31m-[m
[31m-1. **Apify API Token** - Sign up at [apify.com](https://apify.com) for Apollo.io scraping[m
[31m-2. **Google Sheets API** (Optional) - For exporting to Google Sheets[m
[31m-3. **Notion Integration** (Optional) - For Notion database sync[m
[31m-[m
[31m-## 🎮 How to Use[m
[31m-[m
[31m-1. Enter Apollo.io search URLs[m
[31m-2. Set lead count (1-50,000)[m
[31m-3. Choose data fields to extract[m
[31m-4. Add your Apify API token[m
[31m-5. Click start and watch the magic happen![m
[31m-[m
[31m-## 📊 Export Options[m
[31m-[m
[31m-- **CSV Download**: Instant CSV file download[m
[31m-- **JSON Download**: Structured JSON data export[m
[31m-- **Google Sheets**: Direct export to spreadsheets[m
[31m-- **Notion Database**: Sync with your Notion workspace[m
[31m-[m
[31m-## 🔧 Advanced Usage[m
[31m-[m
[31m-### With Docker Compose[m
[32m+[m[32m## 🐳 Docker Compose[m
 [m
 ```yaml[m
 version: '3.8'[m
 services:[m
[31m-  tiz-lead-scraper:[m
[32m+[m[32m  tiz-ai-scraper:[m
     image: tiz20lion/tiz-lead-scraper:latest[m
[32m+[m[32m    container_name: tiz-ai-scraper[m
[32m+[m[32m    restart: unless-stopped[m
     ports:[m
       - "5000:5000"[m
     environment:[m
[31m-      - LOG_LEVEL=INFO[m
[31m-    restart: unless-stopped[m
[32m+[m[32m      - OPENROUTER_API_KEY=your_openrouter_key[m
[32m+[m[32m    volumes:[m
[32m+[m[32m      - tiz-data:/app/data[m
[32m+[m
[32m+[m[32mvolumes:[m
[32m+[m[32m  tiz-data:[m
 ```[m
 [m
[31m-### Environment Variables[m
[32m+[m[32m## 🤖 AI Features[m
 [m
[31m-- `LOG_LEVEL`: Set logging level (INFO, DEBUG, WARNING, ERROR)[m
[31m-- `RATE_LIMIT_REQUESTS`: API rate limit (default: 10)[m
[31m-- `RATE_LIMIT_WINDOW`: Rate limit window in seconds (default: 60)[m
[32m+[m[32m- 🧠 **AI-Enhanced Prompts** - Smart optimization for better targeting[m
[32m+[m[32m- 🔍 **AI Search Queries** - Intelligent query generation and refinement[m
[32m+[m[32m- ⭐ **High-Quality Leads** - AI filtering for premium results[m
[32m+[m[32m- 📊 **Smart Export** - AI-organized CSV, Google Sheets, Notion exports[m
[32m+[m[32m- 🎯 **Learning Agent** - Continuously improves lead quality[m
[32m+[m[32m- 📱 **Intelligent UI** - AI-guided interface with real-time suggestions[m
 [m
[31m-## 🛠️ Development[m
[32m+[m[32m## 🔮 Coming Soon[m
 [m
[31m-Want to contribute? Check out the [GitHub repository](https://github.com/tiz20lion/tiz-lead-scraper) for the full source code and development setup.[m
[32m+[m[32m- 🕵️ **AI Lead Insights Agent** - Deep research on each lead's website, LinkedIn, Twitter profiles[m
[32m+[m[32m- ✍️ **AI Email Writer Agent** - Personalized email crafting based on lead insights[m
[32m+[m[32m- 📧 **Smart Email Sender** - Automated outreach with AI-generated personalized messages[m
[32m+[m[32m- 📋 **Custom Prompts** - Define your outreach goals and key points for AI email generation[m
 [m
[31m-## 📞 Support[m
[32m+[m[32m## 🔧 Environment Variables[m
 [m
[31m-- **GitHub Issues**: Report bugs and request features[m
[31m-- **Documentation**: Full setup guide in the repository[m
[31m-- **Community**: Join discussions and get help[m
[32m+[m[32m| Variable | Description | Required |[m
[32m+[m[32m|----------|-------------|----------|[m
[32m+[m[32m| `OPENROUTER_API_KEY` | Your OpenRouter API key for AI automation | Yes |[m
[32m+[m[32m| `GOOGLE_SHEETS_CREDENTIALS` | Path to Google service account JSON | No |[m
[32m+[m[32m| `NOTION_TOKEN` | Notion integration token for AI database sync | No |[m
[32m+[m[32m| `LOG_LEVEL` | Logging level (INFO, DEBUG) | No |[m
 [m
[31m-## 📈 Tags[m
[32m+[m[32m## 📋 How to Use[m
 [m
[31m-- `latest`: Most recent stable version[m
[31m-- `v1.x.x`: Specific version releases[m
[31m-- `main`: Latest development build[m
[32m+[m[32m1. **Get OpenRouter API Key** - Sign up at [openrouter.ai](https://openrouter.ai) for AI-powered automation[m
[32m+[m[32m2. **Start Container** - Use one of the commands above[m
[32m+[m[32m3. **Open Browser** - Navigate to http://localhost:5000[m
[32m+[m[32m4. **Add Target URLs** - Input your lead source URLs[m
[32m+[m[32m5. **AI Enhancement** - Let the agent optimize your prompts and queries[m
[32m+[m[32m6. **Smart Extraction** - AI extracts up to 50,000 high-quality leads[m
[32m+[m[32m7. **Export Data** - AI-organized export to your preferred format[m
 [m
[31m-## 👨‍💻 Meet the Developer[m
[32m+[m[32m## 📊 AI-Enhanced Data[m
 [m
[31m-**Built with ❤️ by Tiz**[m
[32m+[m[32m**Smart Contact**: AI-verified Name, Email, Phone[m
[32m+[m[32m**Professional Intelligence**: Company, Job Title, Industry, Location[m[41m  [m
[32m+[m[32m**Social Graph**: LinkedIn, Twitter, Instagram, Website[m
[32m+[m[32m**AI Quality Score**: Lead relevance and engagement potential[m
 [m
[31m-Full-Stack Developer & Lead Generation Expert who created this powerful tool to help businesses scale their outreach efforts. With expertise in Python, FastAPI, Docker, and modern web technologies, I specialize in building automation solutions that drive real business results.[m
[32m+[m[32m## 🛠️ AI Agent API[m
 [m
[31m-### 🚀 Why This Tool Stands Out[m
[32m+[m[32m- `GET /health` - Health check[m
[32m+[m[32m- `POST /api/v1/scrape` - Start intelligent extraction[m
[32m+[m[32m- `GET /api/v1/export/{format}/{task_id}` - AI-organized data export[m
[32m+[m[32m- `GET /docs` - Interactive AI API documentation[m
 [m
[31m-- **Production-Ready**: Built with enterprise-grade security and scalability[m
[31m-- **Modern Architecture**: FastAPI backend with beautiful glass-morphism UI[m
[31m-- **Developer Experience**: Clean code, comprehensive documentation, easy deployment[m
[31m-- **Business Focus**: Designed to solve real lead generation challenges[m
[32m+[m[32m## 🤖 AI Capabilities[m
 [m
[31m-### 🤝 Need Custom Development?[m
[32m+[m[32m**Prompt Enhancement**: Analyzes and improves your search prompts automatically[m
[32m+[m[32m**Query Intelligence**: Generates optimal search queries based on your criteria[m
[32m+[m[32m**Quality Filtering**: AI evaluates and scores leads for maximum relevance[m
[32m+[m[32m**Learning System**: Agent learns from patterns to improve future results[m
 [m
[31m-Looking for tailored automation solutions or custom web applications? I'd love to help bring your ideas to life![m
[32m+[m[32m## 🔗 Links[m
 [m
[31m-**Connect with me:**[m
[31m-- 💼 **LinkedIn**: [Olajide Azeez](https://www.linkedin.com/in/olajide-azeez-a2133a258) - Let's discuss your project[m
[31m-- 📸 **Instagram**: [@tizkiya](https://www.instagram.com/tizkiya?igsh=MXFseXhlMGNvaGZwMQ==) - See my latest work[m
[32m+[m[32m- **📖 GitHub**: [Tiz20lion/tiz-lead-scraper](https://github.com/Tiz20lion/tiz-lead-scraper)[m
[32m+[m[32m- **🐛 Issues**: [Report bugs](https://github.com/Tiz20lion/tiz-lead-scraper/issues)[m
 [m
[31m-**Services I offer:**[m
[31m-- Custom Web Application Development[m
[31m-- API Development & Integration  [m
[31m-- Automation & Web Scraping Solutions[m
[31m-- Lead Generation Tools[m
[31m-- DevOps & Deployment[m
[32m+[m[32m## 👨‍💻 Built by Tiz[m
 [m
[31m----[m
[32m+[m[32m- **LinkedIn**: [Olajide Azeez](https://www.linkedin.com/in/olajide-azeez-a2133a258)[m
[32m+[m[32m- **Instagram**: [@tizkiya](https://www.instagram.com/tizkiya)[m
 [m
[31m-Built with ❤️ for the lead generation community![m
\ No newline at end of file[m
[32m+[m[32m⭐ **Star the [GitHub repo](https://github.com/Tiz20lion/tiz-lead-scraper) if this AI agent helps you!**[m
\ No newline at end of file[m
[1mdiff --git a/Dockerfile b/Dockerfile[m
[1mindex e97a3a0..80979bc 100644[m
[1m--- a/Dockerfile[m
[1m+++ b/Dockerfile[m
[36m@@ -1,59 +1,68 @@[m
[31m-# Use Python 3.11 slim image for optimal size and performance[m
[31m-FROM python:3.11-slim[m
[32m+[m[32m# Multi-stage build for optimized image size[m
[32m+[m[32mFROM python:3.11-slim as builder[m
 [m
[31m-# Set working directory in the container[m
[32m+[m[32m# Set working directory[m
[32m+[m[32mWORKDIR /app[m
[32m+[m
[32m+[m[32m# Install build dependencies[m
[32m+[m[32mRUN apt-get update && apt-get install -y \[m
[32m+[m[32m    gcc \[m
[32m+[m[32m    g++ \[m
[32m+[m[32m    curl \[m
[32m+[m[32m    procps \[m
[32m+[m[32m    net-tools \[m
[32m+[m[32m    && rm -rf /var/lib/apt/lists/*[m
[32m+[m
[32m+[m[32m# Upgrade pip to latest version[m
[32m+[m[32mRUN pip install --no-cache-dir --upgrade pip[m
[32m+[m
[32m+[m[32m# Copy requirements and install Python dependencies[m
[32m+[m[32mCOPY requirements.txt .[m
[32m+[m[32mRUN pip install --no-cache-dir -r requirements.txt[m
[32m+[m
[32m+[m[32m# Production stage[m
[32m+[m[32mFROM python:3.11-slim as production[m
[32m+[m
[32m+[m[32m# Set working directory[m
 WORKDIR /app[m
 [m
 # Set environment variables[m
 ENV PYTHONUNBUFFERED=1[m
 ENV PYTHONDONTWRITEBYTECODE=1[m
[32m+[m[32mENV PYTHONPATH=/app[m
[32m+[m[32mENV TIZ_DOCKER_MODE=1[m
 [m
[31m-# Install system dependencies[m
[32m+[m[32m# Install runtime dependencies (including procps for psutil and debugging tools)[m
 RUN apt-get update && apt-get install -y \[m
[31m-    gcc \[m
[31m-    g++ \[m
     curl \[m
[31m-    && rm -rf /var/lib/apt/lists/*[m
[32m+[m[32m    procps \[m
[32m+[m[32m    net-tools \[m
[32m+[m[32m    htop \[m
[32m+[m[32m    && rm -rf /var/lib/apt/lists/* \[m
[32m+[m[32m    && useradd --create-home --shell /bin/bash appuser[m
[32m+[m
[32m+[m[32m# Copy Python packages from builder stage[m
[32m+[m[32mCOPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages[m
[32m+[m[32mCOPY --from=builder /usr/local/bin /usr/local/bin[m
 [m
[31m-# Copy requirements file[m
[31m-COPY pyproject.toml ./[m
[31m-[m
[31m-# Install dependencies directly with pip[m
[31m-RUN pip install --no-cache-dir --upgrade pip && \[m
[31m-    pip install --no-cache-dir \[m
[31m-    apify-client \[m
[31m-    fastapi \[m
[31m-    google-api-python-client \[m
[31m-    google-auth \[m
[31m-    notion-client \[m
[31m-    pydantic \[m
[31m-    pydantic-settings \[m
[31m-    python-multipart \[m
[31m-    structlog \[m
[31m-    tenacity \[m
[31m-    uvicorn[m
[31m-[m
[31m-# Copy application code[m
[32m+[m[32m# Copy application code and development runner[m
 COPY app/ ./app/[m
[32m+[m[32mCOPY run_dev.py ./[m
[32m+[m[32mCOPY debug_fields.py ./[m
 [m
[31m-# Create directory for logs and data[m
[31m-RUN mkdir -p /app/logs /app/data[m
[32m+[m[32m# Create necessary directories with proper permissions[m
[32m+[m[32mRUN mkdir -p /app/logs /app/data /app/attached_assets && \[m
[32m+[m[32m    chown -R appuser:appuser /app[m
 [m
[31m-# Expose the port the app runs on[m
[31m-EXPOSE 5000[m
[32m+[m[32m# Switch to non-root user for security[m
[32m+[m[32mUSER appuser[m
 [m
[31m-# Set proper permissions[m
[31m-RUN chmod +x app/[m
[32m+[m[32m# Expose the port[m
[32m+[m[32mEXPOSE 5000[m
 [m
[31m-# Health check to ensure the container is running properly[m
[31m-HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \[m
[32m+[m[32m# Health check[m
[32m+[m[32mHEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \[m
     CMD curl -f http://localhost:5000/health || exit 1[m
 [m
[31m-# Set the Python path to include the app directory[m
[31m-ENV PYTHONPATH=/app/app[m
[31m-[m
[31m-# Change to app directory for proper imports[m
[31m-WORKDIR /app/app[m
[31m-[m
[31m-# Run the application[m
[31m-CMD ["python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "5000"][m
\ No newline at end of file[m
[32m+[m[32m# Default command (production mode)[m
[32m+[m[32mCMD ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "5000"][m
\ No newline at end of file[m
[1mdiff --git a/README.md b/README.md[m
[1mindex 83061e4..015647a 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -1,321 +1,111 @@[m
[31m-# 🚀 Tiz Lead Scraper[m
[32m+[m[32m# 🤖 Tiz AI Lead Scraper[m
 [m
[31m-[![Docker Build](https://github.com/tiz20lion/tiz-lead-scraper/actions/workflows/docker-publish.yml/badge.svg)](https://github.com/tiz20lion/tiz-lead-scraper/actions/workflows/docker-publish.yml)[m
 [![Docker Pulls](https://img.shields.io/docker/pulls/tiz20lion/tiz-lead-scraper)](https://hub.docker.com/r/tiz20lion/tiz-lead-scraper)[m
[31m-[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)[m
[32m+[m[32m[![GitHub](https://img.shields.io/github/stars/Tiz20lion/tiz-lead-scraper?style=social)](https://github.com/Tiz20lion/tiz-lead-scraper)[m
 [m
[31m-A powerful, production-ready web scraper for extracting leads from Apollo.io with seamless Google Sheets and Notion integration. Built with modern web technologies and packaged for easy deployment.[m
[32m+[m[32m**AI-Powered Lead Generation Agent - Extract high-quality leads with intelligent automation**[m
 [m
[31m-## ✨ Features[m
[32m+[m[32m## 🚀 AI Features[m
 [m
[31m-- **🎯 Apollo.io Integration**: Extract up to 50,000 leads with 10+ data fields[m
[31m-- **📊 Multiple Export Options**: CSV, JSON, Google Sheets, and Notion[m
[31m-- **🎨 Modern UI**: Beautiful glass-morphism design with smooth animations[m
[31m-- **🔒 Secure**: Built-in CSRF protection and rate limiting[m
[31m-- **🐳 Docker Ready**: One-click deployment with Docker Compose[m
[31m-- **📱 Responsive**: Works perfectly on desktop and mobile devices[m
[32m+[m[32m- 🤖 **AI-Enhanced Prompts** - Smart prompt optimization for better results[m
[32m+[m[32m- 🔍 **AI Search Queries** - Intelligent query generation and refinement[m
[32m+[m[32m- ⭐ **High-Quality Leads** - AI filtering for premium lead quality[m
[32m+[m[32m- 📊 **Smart Export** - AI-organized data export to CSV, Google Sheets, Notion[m
[32m+[m[32m- 🧠 **Learning Agent** - Continuously improves lead targeting[m
[32m+[m[32m- 📱 **Intelligent UI** - AI-guided interface with real-time suggestions[m
 [m
[31m-## 🚀 Quick Start with Docker[m
[32m+[m[32m## 🔮 Coming Soon[m
 [m
[31m-### Prerequisites[m
[32m+[m[32m- 🕵️ **AI Lead Insights Agent** - Deep research on each lead's website, LinkedIn, Twitter profiles[m
[32m+[m[32m- ✍️ **AI Email Writer Agent** - Personalized email crafting based on lead insights[m
[32m+[m[32m- 📧 **Smart Email Sender** - Automated outreach with AI-generated personalized messages[m
[32m+[m[32m- 📋 **Custom Prompts** - Define your outreach goals and key points for AI email generation[m
 [m
[31m-- [Docker](https://docs.docker.com/get-docker/) installed on your system[m
[31m-- [Docker Compose](https://docs.docker.com/compose/install/) (usually included with Docker Desktop)[m
[32m+[m[32m## 🐳 Docker Installation (Recommended)[m
 [m
[31m-### Method 1: Docker Hub (Recommended)[m
[31m-[m
[31m-Pull and run the pre-built image:[m
 ```bash[m
[31m-docker run -d -p 5000:5000 --name tiz-lead-scraper tiz20lion/tiz-lead-scraper:latest[m
[31m-```[m
[31m-[m
[31m-### Method 2: GitHub Repository[m
[31m-[m
[31m-1. **Clone the repository:**[m
[31m-   ```bash[m
[31m-   git clone https://github.com/tiz20lion/tiz-lead-scraper.git[m
[31m-   cd tiz-lead-scraper[m
[31m-   ```[m
[31m-[m
[31m-2. **Quick start (Windows):**[m
[31m-   ```bash[m
[31m-   start.bat[m
[31m-   ```[m
[31m-[m
[31m-3. **Quick start (Linux/Mac):**[m
[31m-   ```bash[m
[31m-   ./start.sh[m
[31m-   ```[m
[31m-[m
[31m-4. **Manual Docker Compose:**[m
[31m-   ```bash[m
[31m-   docker-compose up -d[m
[31m-   ```[m
[31m-[m
[31m-5. **Access the application:**[m
[31m-   Open your browser and visit: `http://localhost:5000`[m
[31m-[m
[31m-That's it! Your Tiz Lead Scraper is now running! 🎉[m
[31m-[m
[31m-## 🐍 Python Setup & Installation[m
[32m+[m[32m# Quick start[m
[32m+[m[32mdocker run -d -p 5000:5000 tiz20lion/tiz-lead-scraper:latest[m
 [m
[31m-### Prerequisites[m
[32m+[m[32m# With your OpenRouter AI key[m
[32m+[m[32mdocker run -d -p 5000:5000 -e OPENROUTER_API_KEY=your_key tiz20lion/tiz-lead-scraper:latest[m
 [m
[31m-- **Python 3.11+** installed on your system[m
[31m-- **Git** for cloning the repository[m
[31m-[m
[31m-### Step 1: Clone Repository[m
[31m-[m
[31m-```bash[m
[31m-git clone https://github.com/tiz20lion/tiz-lead-scraper.git[m
[31m-cd tiz-lead-scraper[m
[32m+[m[32m# Open http://localhost:5000[m
 ```[m
 [m
[31m-### Step 2: Install Dependencies[m
[31m-[m
[31m-#### Using pip (Recommended)[m
[32m+[m[32m## 🐍 Python Installation[m
 [m
[31m-Then set up your environment:[m
 ```bash[m
[31m-# Create virtual environment[m
[31m-python -m venv venv[m
[31m-[m
[31m-# Activate virtual environment[m
[31m-# Windows:[m
[31m-venv\Scripts\activate[m
[31m-# Linux/Mac:[m
[31m-source venv/bin/activate[m
[32m+[m[32m# Clone repository[m
[32m+[m[32mgit clone https://github.com/Tiz20lion/tiz-lead-scraper.git[m
[32m+[m[32mcd tiz-lead-scraper[m
 [m
 # Install dependencies[m
 pip install -r requirements.txt[m
[31m-```[m
[31m-[m
[31m-[m
[31m-### Step 3: Run the Application[m
[31m-[m
[31m-#### Start the server:[m
[31m-```bash[m
[31m-# From the project root directory[m
[31m-python -m uvicorn app.main:app --host 0.0.0.0 --port 5000 --reload[m
[31m-```[m
[31m-[m
[31m-#### Alternative startup method:[m
[31m-```bash[m
[31m-# Navigate to app directory first[m
[31m-cd app[m
[31m-python -m uvicorn main:app --host 0.0.0.0 --port 5000 --reload[m
[31m-```[m
[31m-[m
[31m-### Step 4: Access Your Application[m
[31m-[m
[31m-Open your web browser and go to:[m
[31m-```[m
[31m-http://localhost:5000[m
[31m-```[m
