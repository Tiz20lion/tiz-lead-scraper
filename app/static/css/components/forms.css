/* Form & Input Styles */

/* General Input Section Wrapper */
.input-section {
  margin-bottom: 2rem; /* Spacing between form sections */
  /* Other styles like padding, border if .animated-card is not always used */
}

.input-label {
  display: flex;
  align-items: center;
  gap: 0.3rem;
  font-weight: 600;
  color: hsl(var(--text-primary));
  margin-bottom: 0.5rem;
  font-size: 0.8rem;
}

.input-help {
  font-size: 0.8rem;
  color: hsl(var(--text-muted));
  margin-top: 0.5rem;
}

.input-help a {
  color: hsl(var(--accent-primary));
  text-decoration: none;
}

.input-help a:hover {
  text-decoration: underline;
}

/* Textareas */
.url-textarea, 
.credentials-textarea { /* Combined similar textareas */
  width: 100%;
  min-height: 100px;
  padding: 0.8rem;
  border: 2px solid hsl(var(--border-color));
  border-radius: 0.75rem;
  background: linear-gradient(135deg, hsl(var(--bg-secondary) / 0.8), hsl(var(--bg-panel) / 0.9));
  backdrop-filter: blur(30px);
  color: hsl(var(--text-primary));
  font-family: inherit;
  font-size: 0.8rem;
  line-height: 1.4;
  resize: vertical;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.05);
}

.url-textarea:focus,
.credentials-textarea:focus {
  outline: none;
  border-color: hsl(var(--accent-primary));
  background: linear-gradient(135deg, hsl(var(--bg-panel) / 0.9), hsl(var(--bg-secondary) / 0.95));
  box-shadow: 0 0 0 4px hsl(var(--accent-primary) / 0.15), 
              0 8px 20px hsl(var(--accent-primary) / 0.1),
              inset 0 2px 8px rgba(0, 0, 0, 0.05);
  transform: translateY(-2px);
}

/* General API Input Style */
.api-input {
  width: 100%;
  padding: 1rem;
  border: 2px solid hsl(var(--border-color));
  border-radius: 0.75rem;
  background: hsl(var(--bg-secondary));
  color: hsl(var(--text-primary));
  font-family: inherit;
  font-size: 0.9rem;
  transition: all 0.3s ease;
}

.api-input:focus {
  outline: none;
  border-color: hsl(var(--accent-primary));
  box-shadow: 0 0 0 3px hsl(var(--accent-primary) / 0.1);
}

/* Count Input (specific style) */
.count-input {
  background: linear-gradient(135deg, hsl(var(--accent-primary)), hsl(var(--accent-secondary)));
  color: white;
  border: none;
  padding: 0.4rem 0.8rem;
  border-radius: 15px;
  font-weight: 700;
  font-size: 0.9rem;
  width: 80px;
  text-align: center;
  margin: 0 0.5rem; /* Or handle spacing in layout */
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  /* animation: count-pulse 2s infinite ease-in-out; Already in badges.css if count-badge is used */
}

.count-input:focus {
  outline: none;
  background: linear-gradient(135deg, hsl(var(--accent-secondary)), hsl(var(--accent-primary)));
  box-shadow: 0 0 0 3px hsl(var(--accent-primary) / 0.3);
  transform: scale(1.05);
}

.count-input::placeholder {
  color: rgba(255, 255, 255, 0.7);
}

/* Slider Styles */
.slider-container {
  position: relative; /* For progress fill if added */
}

.lead-slider {
  width: 100%;
  height: 6px;
  border-radius: 3px;
  background: hsl(var(--bg-secondary));
  outline: none;
  -webkit-appearance: none;
  appearance: none; /* Standard property */
  margin: 1rem 0;
}

.lead-slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: hsl(var(--accent-primary));
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 2px 4px rgb(0 0 0 / 0.2);
}

.lead-slider::-webkit-slider-thumb:hover {
  transform: scale(1.2);
  box-shadow: 0 4px 8px rgb(0 0 0 / 0.3);
}

.lead-slider::-moz-range-thumb {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: hsl(var(--accent-primary));
  cursor: pointer;
  border: none;
  transition: all 0.3s ease;
}

.slider-labels {
  display: flex;
  justify-content: space-between;
  font-size: 0.8rem;
  color: hsl(var(--text-muted));
}

/* Pulse animation for highlighting elements */
@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

/* Custom Dropdown for Prompt Type */
.prompt-type-selector { /* Container for the dropdown */
    margin-bottom: 1rem;
}

.dropdown-label { /* Label for the dropdown */
    display: block;
    font-size: 0.85rem;
    font-weight: 600;
    color: hsl(var(--text-primary));
    margin-bottom: 0.5rem;
}

.custom-dropdown { /* Wrapper for select and arrow */
    position: relative;
    display: flex;
    align-items: center;
}

.prompt-type-select {
    appearance: none;
    -webkit-appearance: none; /* Safari and Chrome */
    -moz-appearance: none;    /* Firefox */
    background: linear-gradient(135deg, hsl(var(--bg-panel)), hsl(var(--bg-secondary)));
    border: 1px solid hsl(var(--border-color));
    border-radius: 0.5rem;
    padding: 0.75rem 2.5rem 0.75rem 1rem; /* Right padding for arrow */
    font-size: 0.9rem;
    font-weight: 500;
    color: hsl(var(--text-primary));
    width: 100%;
    cursor: pointer;
    transition: all 0.3s ease;
    font-family: inherit;
}

.prompt-type-select:focus {
    outline: none;
    border-color: hsl(var(--accent-primary));
    box-shadow: 0 0 0 3px hsl(var(--accent-primary) / 0.1);
}

.dropdown-arrow { /* For the select dropdown */
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
    color: hsl(var(--text-secondary));
    transition: all 0.3s ease;
}

.custom-dropdown:hover .dropdown-arrow {
    color: hsl(var(--accent-primary));
}


/* Field Grid, Field Checkbox, Checkmark - these are quite specific to field selection UI */
/* Consider moving to pages/configuration_page.css or components/ai_prompt.css if tightly coupled */
.field-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
  gap: 0.5rem;
}

.field-checkbox { /* This is the clickable label/card */
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
  padding: 0.7rem 0.6rem;
  border-radius: 0.5rem;
  background: linear-gradient(135deg, hsl(var(--bg-secondary) / 0.7), hsl(var(--bg-panel) / 0.8));
  border: 1px solid hsl(var(--border-color) / 0.4);
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  font-size: 0.8rem;
  font-weight: 500;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  padding: 1.5rem;
  margin-bottom: 2rem;
  backdrop-filter: blur(30px);
  position: relative;
  overflow: hidden;
}

.field-checkbox:hover {
  background: linear-gradient(135deg, hsl(var(--accent-primary) / 0.15), hsl(var(--accent-secondary) / 0.1));
  border-color: hsl(var(--accent-primary) / 0.6);
  transform: translateY(-3px);
  box-shadow: 0 8px 20px hsl(var(--accent-primary) / 0.1), 0 4px 8px rgba(0, 0, 0, 0.1);
}

.field-checkbox input[type="checkbox"] { /* The actual checkbox input, hidden */
  display: none;
}

.checkmark { /* The custom visual checkmark */
  width: 10px;
  height: 10px;
  border: 2px solid hsl(var(--border-color));
  border-radius: 3px;
  position: relative;
  transition: all 0.3s ease;
  flex-shrink: 0;
}

.field-checkbox input[type="checkbox"]:checked + .checkmark {
  background: hsl(var(--accent-primary));
  border-color: hsl(var(--accent-primary));
}

.field-checkbox input[type="checkbox"]:checked + .checkmark::after {
  content: 'âœ“';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 12px; /* Adjust if checkmark size changes */
  font-weight: bold;
} 